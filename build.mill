package build

import $ivy.`com.lihaoyi::mill-contrib-scoverage:`
import $ivy.`com.lihaoyi::mill-contrib-sonatypecentral:`
import $ivy.`org.typelevel::scalac-options:0.1.7`
//import $ivy.`io.github.halotukozak::mill:`

import mill._
import mill.scalalib._
import mill.scalalib.publish._
import mill.contrib.scoverage._
import mill.contrib.sonatypecentral.SonatypeCentralPublishModule
import mill.scalalib.publish.{Developer, License, PomSettings, VersionControl}
import mill.scalalib.api.ZincWorkerUtil.scalaNativeBinaryVersion
import org.typelevel.scalacoptions.ScalacOptions._
import org.typelevel.scalacoptions.{ScalaVersion, ScalacOptions}

object `package` extends RootModule with ScalaModule with ScoverageModule with SonatypeCentralPublishModule {
  val millVersion = "0.12.9"

  def scalaVersion = "2.13.16"

  override def scalacOptions = super.scalacOptions() ++ ScalacOptions.tokensForVersion(
    ScalaVersion.unsafeFromString(scalaVersion()),
    ScalacOptions.default + source3 ++ fatalWarningOptions,
  )

  def scoverageVersion = "2.3.0"

  def platformSuffix = "_mill" + mill.main.BuildInfo.millBinPlatform

  def ivyDeps = Agg(
    ivy"com.lihaoyi:mill-dist:$millVersion",
    ivy"org.eclipse.jgit:org.eclipse.jgit:7.1.0.202411261347-r",
  )

  object test extends ScalaTests with TestModule.Utest with ScoverageTests {
    def ivyDeps = Agg(
      ivy"com.lihaoyi::mill-testkit:$millVersion",
    )

    def forkEnv = Map("MILL_EXECUTABLE_PATH" -> millExecutable.assembly().path.toString)

    object millExecutable extends JavaModule {
      def ivyDeps = Agg(ivy"com.lihaoyi:mill-dist:$millVersion")

      def mainClass = Some("mill.runner.client.MillClientMain")
    }
  }

  def artifactName = s"bartus-version_mill${scalaNativeBinaryVersion(millVersion)}"

  def publishVersion = "v0.0.2"

  def pomSettings = PomSettings(
    description = "Another git version plugin for Mill build tool.",
    organization = "io.github.halotukozak",
    url = "https://github.com/halotukozak/bartus-version",
    licenses = Seq(License.MIT),
    versionControl = VersionControl.github("halotukozak", "bartus-version"),
    developers = Seq(Developer("halotukozak", "Bart≈Çomiej Kozak", "https://github.com/halotukozak")),
  )
}
